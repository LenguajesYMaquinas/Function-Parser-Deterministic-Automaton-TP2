// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/Div4.gold"
import gold.structures.automaton.*;
import gold.structures.map.*;
import gold.util.*;
import gold.visualization.automaton.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class Div4 {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object chars(Object string) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v1=$newSet();
      int $v3=$int(0);
      int $v4=$int($invokeMethod("length",string,new Object[]{}))-1;
      $v2:for (int i=$v3; i<=$v4; i++) {
        $v1.add($invokeMethod("charAt",string,new Object[]{i}));
      }
      $result=$v1;
      if (true) break $try;
      $line=6;
      $rethrow(new RuntimeException("The function \"chars(string:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Div4.class,"chars",$line);
    }
    return $result;
  }
  public static Object elements(Object array) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v5=$newSet();
      int $v7=$int(0);
      int $v8=$int($opAbsolY(array))-1;
      $v6:for (int i=$v7; i<=$v8; i++) {
        $v5.add($getArrayValue(array,new Object[]{i}));
      }
      $result=$v5;
      if (true) break $try;
      $line=7;
      $rethrow(new RuntimeException("The function \"elements(array:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Div4.class,"elements",$line);
    }
    return $result;
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=10;
      Object m=$fix(Div4.createTransducer());
      $line=11;
      GAutomataFrame.show($cast(gold.structures.automaton.IAutomaton.class,m));
      $line=12;
      Div4.test($cast(gold.structures.automaton.ITransducer.class,m));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Div4.class,"main",$line);
    }
  }
  public static Object test(ITransducer M) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=18;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=20;
      Object inputA=$fix(Div4.elements(((gold.structures.automaton.ITransducer)M).getInputAlphabet()));
      $line=22;
      System.out.println($message(new Object[]{"input? (EXIT to stop)"}));
      $line=24;
      Object string=$fix(((java.util.Scanner)sc).nextLine());
      $line=27;
      while (true) {
        if (!(!$opEqualY(string,"EXIT"))) break;
        $line=30;
        if (!$bool($opSbsetY(Div4.chars(string),inputA))) {
          $line=31;
          System.out.println($message(new Object[]{$opAdditY("Input contains invalid symbols: ",$opDiffeY(Div4.chars(string),inputA))}));
        }
        else {
          $line=33;
          Object result=$fix(((gold.structures.automaton.ITransducer)M).acceptsString($cast(java.lang.String.class,string)));
          $line=34;
          Object div4=$fix(((gold.structures.automaton.ITransducer)M).getOutputString());
          $line=36;
          System.out.println($message(new Object[]{$opAdditY($opAdditY("The automaton did ",(($bool(result))?(""):("not ")))," accept the string.")}));
          $line=37;
          if ($bool(result)) {
            $line=37;
            System.out.println($message(new Object[]{$opAdditY("Result: ",div4)}));
          }
        }
        $line=39;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=40;
        System.out.println($message(new Object[]{"input? (EXIT to stop)"}));
        $line=42;
        string=$fix(((java.util.Scanner)sc).nextLine());
      }
      $line=45;
      System.out.println($message(new Object[]{"Good bye"}));
      $line=46;
      System.out.println($message(new Object[]{""}));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Div4.class,"test",$line);
    }
    return $result;
  }
  public static ITransducer createTransducer() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=58;
      Object Q=$fix(GCollections.asSet(0,1,2,3,"f"));
      $line=60;
      Object \u03A3=$fix($opUnionY($opIntvlY('0','9'),GCollections.asSet('$')));
      $line=61;
      Object Out=$fix($opUnionY($opIntvlY('0','9'),GCollections.asSet('R')));
      $line=63;
      Object q_0=$fix(0);
      $line=64;
      Object F=$fix(GCollections.asSet("f"));
      $line=65;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,Out,q_0,F,new GMethod(Div4.class,"\u03B4"),new GMethod(Div4.class,"g"),new GMethod(Div4.class,"h")});
      if (true) break $try;
      $line=66;
      $rethrow(new RuntimeException("The function \"createTransducer()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Div4.class,"createTransducer",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object \u03B4(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=69;
      Object d=$fix($opSubtrY(s,'0'));
      $line=70;
      if (($opEqualY(q,"f")||$opEqualY(s,'$'))) {
        $line=70;
        $result="f";
        if (true) break $try;
      }
      else {
        $line=71;
        $result=$opModulY($opAdditY($opMultpY(10,q),d),4);
        if (true) break $try;
      }
      $line=73;
      $rethrow(new RuntimeException("The function \"\u03B4(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Div4.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object h(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=76;
      Object d=$fix($opSubtrY(s,'0'));
      $line=77;
      if ($opEqualY(q,"f")) {
        $line=77;
        $result="";
        if (true) break $try;
      }
      else {
        $line=78;
        if ($opEqualY(s,'$')) {
          $line=78;
          $result=(($opEqualY(q,0))?(""):($opAdditY("R",q)));
          if (true) break $try;
        }
        else {
          $line=79;
          $result=$opQuotnY($opAdditY($opMultpY(10,q),d),4);
          if (true) break $try;
        }
      }
      $line=81;
      $rethrow(new RuntimeException("The function \"h(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Div4.class,"h",$line);
    }
    return $result;
  }
  public static Object g(Object q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=86;
      $result="";
      if (true) break $try;
      $line=88;
      $rethrow(new RuntimeException("The function \"g(q:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Div4.class,"g",$line);
    }
    return $result;
  }
}
