// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/Utilities.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class Utilities {
  public static Object test(IAutomaton M) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=8;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=9;
      Object isTransducer=$fix($invokeMethod("isInstance",$invokeField(ITransducer.class,"class",true,null),new Object[]{M}));
      $line=10;
      while (true) {
        if (!($bool(true))) break;
        $line=11;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=12;
        System.out.println($message(new Object[]{"Input String (empty string to exit): "}));
        $line=14;
        Object string=$fix(((java.util.Scanner)sc).nextLine());
        $line=15;
        if ($opEqualY(string,"")) {
          $line=15;
          break;
        }
        $line=16;
        Object result=$fix(((gold.structures.automaton.IAutomaton)M).acceptsString($cast(java.lang.String.class,string)));
        $line=17;
        System.out.println($message(new Object[]{$opAdditY($opAdditY("The string was ",(($bool(result))?("accepted!"):("rejected."))),(($bool(isTransducer))?(". Output:"):("")))}));
        $line=18;
        if ($bool(isTransducer)) {
          $line=19;
          System.out.println($message(new Object[]{$invokeMethod("getOutputString",$cast(ITransducer.class,M),new Object[]{})}));
        }
      }
      $line=22;
      System.out.println($message(new Object[]{"Execution terminated"}));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Utilities.class,"test",$line);
    }
    return $result;
  }
  public static Object chars(Object string) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v1=$newSet();
      int $v3=$int(0);
      int $v4=$int($invokeMethod("length",string,new Object[]{}))-1;
      $v2:for (int i=$v3; i<=$v4; i++) {
        $v1.add($invokeMethod("charAt",string,new Object[]{i}));
      }
      $result=$v1;
      if (true) break $try;
      $line=27;
      $rethrow(new RuntimeException("The function \"chars(string:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Utilities.class,"chars",$line);
    }
    return $result;
  }
  public static Object elements(Object array) {
    int $line=0;
    Object $result=null;
    $try:try {
      gold.structures.set.ISet $v5=$newSet();
      int $v7=$int(0);
      int $v8=$int($opAbsolY(array))-1;
      $v6:for (int i=$v7; i<=$v8; i++) {
        $v5.add($getArrayValue(array,new Object[]{i}));
      }
      $result=$v5;
      if (true) break $try;
      $line=28;
      $rethrow(new RuntimeException("The function \"elements(array:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Utilities.class,"elements",$line);
    }
    return $result;
  }
  public static Object testCodeDecode(ITransducer C, ITransducer D) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=31;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=33;
      Object inputC=$fix(Utilities.elements(((gold.structures.automaton.ITransducer)C).getInputAlphabet()));
      $line=34;
      Object inputD=$fix(Utilities.elements(((gold.structures.automaton.ITransducer)D).getInputAlphabet()));
      $line=36;
      System.out.println($message(new Object[]{"Testing Coder-Decoder"}));
      $line=37;
      Object string=$fix(" ");
      $line=38;
      boolean $v9=false;
      while (true) {
        if ($v9) {
          if ($bool(false)) break;
        }
        $v9=true;
        $line=39;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=40;
        System.out.println($message(new Object[]{"Input string: (empty string to end)"}));
        $line=42;
        string=$fix(((java.util.Scanner)sc).nextLine());
        $line=43;
        if ($opEqualY(string,"")) {
          $line=43;
          break;
        }
        else {
          $line=45;
          Object option=$fix("");
          $line=46;
          while (true) {
            if (!(!$opMembrY(option,GCollections.asSet("1","2","3")))) break;
            $line=47;
            System.out.println($message(new Object[]{"What do you want to do?"}));
            $line=48;
            System.out.println($message(new Object[]{"1. code only?"}));
            $line=49;
            System.out.println($message(new Object[]{"2. code and decode?"}));
            $line=50;
            System.out.println($message(new Object[]{"3. decode only?"}));
            $line=52;
            option=$fix(((java.util.Scanner)sc).nextLine());
          }
          $line=54;
          Object stringOut=$fix("");
          $line=55;
          if (($opEqualY(option,"1")||$opEqualY(option,"2"))) {
            $line=57;
            if ($opSbsetY(Utilities.chars(string),inputC)) {
              $line=58;
              Object result=$fix(((gold.structures.automaton.ITransducer)C).acceptsString($cast(java.lang.String.class,string)));
              $line=59;
              System.out.println($message(new Object[]{$opAdditY($opAdditY($opAdditY("The string was ",(($bool(result))?("accepted"):("not accepted"))),". Output: "),((gold.structures.automaton.ITransducer)C).getOutputString())}));
              $line=60;
              stringOut=$fix(((gold.structures.automaton.ITransducer)C).getOutputString());
              $line=61;
              if ($opEqualY(option,"2")) {
                $line=62;
                if ($opSbsetY(Utilities.chars(stringOut),inputD)) {
                  $line=63;
                  result=$fix(((gold.structures.automaton.ITransducer)D).acceptsString($cast(java.lang.String.class,stringOut)));
                  $line=64;
                  System.out.println($message(new Object[]{$opAdditY($opAdditY($opAdditY("The coded string was ",(($bool(result))?("accepted"):("not accepted"))),". Output: "),((gold.structures.automaton.ITransducer)D).getOutputString())}));
                  $line=65;
                  Object stringOut1=$fix(((gold.structures.automaton.ITransducer)D).getOutputString());
                  $line=66;
                  System.out.println($message(new Object[]{$opAdditY($opAdditY("The decoded string is ",((!$opEqualY(stringOut1,string))?("not "):(""))),"equal to the original string.")}));
                }
                else {
                  $line=68;
                  System.out.println($message(new Object[]{$opAdditY("Output contains invalid symbols for the decoder: ",$opDiffeY(Utilities.chars(stringOut),inputD))}));
                }
              }
            }
            else {
              $line=73;
              System.out.println($message(new Object[]{$opAdditY("Input contains invalid symbols: ",$opDiffeY(Utilities.chars(string),inputC))}));
            }
          }
          else {
            $line=76;
            if ($opSbsetY(Utilities.chars(string),inputD)) {
              $line=77;
              Object result=$fix(((gold.structures.automaton.ITransducer)D).acceptsString($cast(java.lang.String.class,string)));
              $line=78;
              System.out.println($message(new Object[]{$opAdditY($opAdditY($opAdditY("The string was ",(($bool(result))?("accepted"):("not accepted")))," by the decoder. Output: "),((gold.structures.automaton.ITransducer)D).getOutputString())}));
            }
            else {
              $line=80;
              System.out.println($message(new Object[]{$opAdditY("Input contains invalid symbols: ",$opDiffeY(Utilities.chars(string),inputD))}));
            }
          }
        }
      }
      $line=87;
      System.out.println($message(new Object[]{"Execution Ended"}));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Utilities.class,"testCodeDecode",$line);
    }
    return $result;
  }
}
